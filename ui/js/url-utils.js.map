{"version":3,"sources":["../src/url-utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","module","global","ICAP","cryptoUrl","cryptoCode","address","amount","fromAddress","self","window","hex","BASE36_ALPHABET","bs36","decodeBBAN","bban","tmp","bytesToHex","decode","asset","slice","institution","client","encodeBBAN","join","toUpperCase","encode","hexToBytes","prepare","iban","split","map","charCodeAt","mod9710","input","m","print","checksum","replace","novalidity","nonstd","ret","fromAsset","toAddress","toAsset","isICAP","isAddress","isAsset","base","ALPHABET","ALPHABET_MAP","BASE","LEADER","charAt","source","digits","j","carry","push","k","ii","jj","string","bytes","value","undefined","reverse","globals","convertHex","arrBytesToHex","indexOf","match","x","parseInt","padLeft","toString","orig","len","Array"],"mappings":"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","file":"url-utils.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar ICAP = require('ethereumjs-icap')\n\nfunction cryptoUrl (cryptoCode, address, amount) {\n  switch (cryptoCode) {\n    case 'BTC': return 'bitcoin:' + address + '?amount=' + amount\n    case 'ETH': return 'iban:' + ICAP.fromAddress(address, false, true) + '?amount=' + amount\n  }\n}\n\nglobal.cryptoUrl = cryptoUrl\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"ethereumjs-icap\":2}],2:[function(require,module,exports){\nvar hex = require('convert-hex')\n\n// For simplicity we redefine it, as the default uses lowercase\nvar BASE36_ALPHABET = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nvar bs36 = require('base-x')(BASE36_ALPHABET)\n\nvar ICAP = {}\n\nICAP.decodeBBAN = function (bban) {\n  var length = bban.length\n  if (length === 30 || length === 31) {\n    var tmp = hex.bytesToHex(bs36.decode(bban))\n\n    // FIXME: horrible padding code\n    while (tmp.length !== 40) {\n      tmp = '0' + tmp\n    }\n\n    return '0x' + tmp\n  } else if (length === 16) {\n    return {\n      asset: bban.slice(0, 3),\n      institution: bban.slice(3, 7),\n      client: bban.slice(7, 16)\n    }\n  } else {\n    throw new Error('Not a valid Ethereum BBAN')\n  }\n}\n\nICAP.encodeBBAN = function (bban) {\n  if (typeof bban === 'object') {\n    if (bban.asset.length !== 3 ||\n        bban.institution.length !== 4 ||\n        bban.client.length !== 9) {\n      throw new Error('Invalid \\'indirect\\' Ethereum BBAN')\n    }\n    return [ bban.asset, bban.institution, bban.client ].join('').toUpperCase()\n  } else if ((bban.length === 42) && (bban[0] === '0') && (bban[1] === 'x')) {\n    // Workaround for base-x, see https://github.com/cryptocoinjs/base-x/issues/18\n    if ((bban[2] === '0') && (bban[3] === '0')) {\n      bban = '0x' + bban.slice(4)\n    }\n\n    return bs36.encode(hex.hexToBytes(bban))\n  } else {\n    throw new Error('Not a valid input for Ethereum BBAN')\n  }\n}\n\n// ISO13616 reordering and letter translation\n// NOTE: we assume input is uppercase only\n// based off code from iban.js\nfunction prepare (iban) {\n  // move front to the back\n  iban = iban.slice(4) + iban.slice(0, 4)\n\n  // translate letters to numbers\n  return iban.split('').map(function (n) {\n    var code = n.charCodeAt(0)\n    // 65 == A, 90 == Z in ASCII\n    if (code >= 65 && code <= 90) {\n      // A = 10, B = 11, ... Z = 35\n      return code - 65 + 10\n    } else {\n      return n\n    }\n  }).join('')\n}\n\n// Calculate ISO7064 mod 97-10\n// NOTE: assumes all numeric input string\nfunction mod9710 (input) {\n  var m = 0\n  for (var i = 0; i < input.length; i++) {\n    m *= 10\n    m += input.charCodeAt(i) - 48 // parseInt()\n    m %= 97\n  }\n  return m\n}\n\nICAP.encode = function (bban, print) {\n  bban = ICAP.encodeBBAN(bban)\n\n  var checksum = 98 - mod9710(prepare('XE00' + bban))\n\n  // format into 2 digits\n  checksum = ('0' + checksum).slice(-2)\n\n  var iban = 'XE' + checksum + bban\n  if (print === true) {\n    // split a group of 4 chars with spaces\n    iban = iban.replace(/(.{4})/g, '$1 ')\n  }\n\n  return iban\n}\n\nICAP.decode = function (iban, novalidity) {\n  // change from 'print format' to 'electronic format', e.g. remove spaces\n  iban = iban.replace(/\\ /g, '')\n\n  // check for validity\n  if (!novalidity) {\n    if (iban.slice(0, 2) !== 'XE') {\n      throw new Error('Not in ICAP format')\n    }\n\n    if (mod9710(prepare(iban)) !== 1) {\n      throw new Error('Invalid checksum in IBAN')\n    }\n  }\n\n  return ICAP.decodeBBAN(iban.slice(4, 35))\n}\n\n/*\n * Convert Ethereum address to ICAP\n * @method fromAddress\n * @param {String} address Address as a hex string.\n * @param {bool} nonstd Accept address which will result in non-standard IBAN\n * @returns {String}\n */\nICAP.fromAddress = function (address, print, nonstd) {\n  var ret = ICAP.encode(address, print)\n\n  if ((ret.replace(' ', '').length !== 34) && (nonstd !== true)) {\n    throw new Error('Supplied address will result in invalid an IBAN')\n  }\n\n  return ret\n}\n\n/*\n * Convert asset into ICAP\n * @method fromAsset\n * @param {Object} asset Asset object, must contain the fields asset, institution and client\n * @returns {String}\n */\nICAP.fromAsset = function (asset, print) {\n  return ICAP.encode(asset, print)\n}\n\n/*\n * Convert an ICAP into an address\n * @method toAddress\n * @param {String} iban IBAN/ICAP, must have an address encoded\n * @returns {String}\n */\nICAP.toAddress = function (iban) {\n  var address = ICAP.decode(iban)\n  if (typeof address !== 'string') {\n    throw new Error('Not an address-encoded ICAP')\n  }\n  return address\n}\n\n/*\n * Convert an ICAP into an asset\n * @method toAsset\n * @param {String} iban IBAN/ICAP, must have an asset encoded\n * @returns {Object}\n */\nICAP.toAsset = function (iban) {\n  var asset = ICAP.decode(iban)\n  if (typeof asset !== 'object') {\n    throw new Error('Not an asset-encoded ICAP')\n  }\n  return asset\n}\n\nICAP.isICAP = function (iban) {\n  try {\n    ICAP.decode(iban)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nICAP.isAddress = function (iban) {\n  try {\n    ICAP.toAddress(iban)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nICAP.isAsset = function (iban) {\n  try {\n    ICAP.toAsset(iban)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nmodule.exports = ICAP\n\n},{\"base-x\":3,\"convert-hex\":4}],3:[function(require,module,exports){\n// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var i = 0; i < ALPHABET.length; i++) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n      digits.push(0)\n    }\n\n    // convert digits to a string\n    for (var ii = 0, jj = digits.length - 1; ii <= jj; ++ii, --jj) {\n      var tmp = ALPHABET[digits[ii]]\n      digits[ii] = ALPHABET[digits[jj]]\n      digits[jj] = tmp\n    }\n\n    return digits.join('')\n  }\n\n  function decode (string) {\n    if (string.length === 0) return []\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) throw new Error('Non-base' + BASE + ' character')\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return bytes.reverse()\n  }\n\n  return {\n    encode: encode,\n    decode: decode\n  }\n}\n\n},{}],4:[function(require,module,exports){\n!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);\n},{}]},{},[1]);\n"]}